rabbitmq:
  rabbitmq:
    erlangCookie: rabbitmqErlangCookie

docker-registry:
  service:
    type: NodePort

registry:
  local: true
  scheme: http
  pullDomain: 127.0.0.1
  prepopulate:
    - image: eliaskousk/substra-tools:0.7.0-scikit
    - image: eliaskousk/substra-tools:0.7.0-pytorch

secrets:
  fabricConfigmap: network-org-3-hlf-k8s-fabric

celeryworker:
  concurrency: 3
  rbac:
    enable: true

backend:
  settings: dev
  tokenStrategy: 'reuse'
  defaultDomain: http://backend-org-3-substra-backend-server.org-3:8000
  kaniko:
    mirror: true
    cache:
      warmer:
        images:
          - image: eliaskousk/substra-tools:0.7.0-scikit
          - image: eliaskousk/substra-tools:0.7.0-pytorch
  service:
    type: ClusterIP
    port: 8000
  ingress:
    enabled: true
    hosts:
      - { host: substra-backend.node-3.com, paths: ["/"] }
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
      nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
      nginx.ingress.kubernetes.io/proxy-read-timeout: '120'
      nginx.ingress.kubernetes.io/proxy-next-upstream: 'error timeout http_502'
      nginx.ingress.kubernetes.io/proxy-next-upstream-tries: '3'

organization:
  name: MyOrg3

peer:
  host: network-org-3-peer-1-hlf-peer.org-3.svc.cluster.local
  port: 7051
  mspID: MyOrg3MSP
  waitForEventTimeoutSeconds: 120

incomingNodes:
  - { name: MyOrg1MSP, secret: nodeSecret3w1 }
  - { name: MyOrg2MSP, secret: nodeSecret3w2 }
  - { name: MyOrg3MSP, secret: selfSecret3 }
  - { name: MyOrg4MSP, secret: nodeSecret3w4 }

outgoingNodes:
  - { name: MyOrg1MSP, secret: nodeSecret1w3 }
  - { name: MyOrg2MSP, secret: nodeSecret2w3 }
  - { name: MyOrg3MSP, secret: selfSecret3 }
  - { name: MyOrg4MSP, secret: nodeSecret4w3 }

users:
  - name: "node-3"
    secret: "p@$swr0d46"
    channel: "mychannel"
  # - name: "node-3-yourchannel"
  #   secret: "p@$swr0d46"
  #   channel: "yourchannel"

persistence:
  hostPathServerMedias: "/tmp/org-3/"

extraEnv:
  # Should be a json list
  - name: CORS_ORIGIN_WHITELIST
    value: '["http://substra-frontend.node-3.com", "http://substra-frontend.node-3.com:3000", "http://substra-frontend.node-3.com:3001"]'
  - name: CORS_ALLOW_CREDENTIALS
    value: "true"
  - name: ALLOWED_HOSTS
    value: '[".node-3.com", ".org-3", ".org-3.svc.cluster.local"]'
  - name: DEFAULT_THROTTLE_RATES
    value: '120'
  - name: TASK_CACHE_DOCKER_IMAGES
    value: 'False'
  - name: BUILD_IMAGE
    value: 'True'

channels:
  - mychannel:
      restricted: false
      model_export_enabled: true
      chaincode:
        name: mycc
        version: "1.0"
  # - yourchannel:
  #     restricted: false
  #     model_export_enabled: true
  #     chaincode:
  #       name: yourcc
  #       version: "1.0"
